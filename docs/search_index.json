[["index.html", "pOmics3: Functional proteomics Data Analysis in R Preface", " pOmics3: Functional proteomics Data Analysis in R Nico Hüttmann Preface Welcome! This handbook is a reference guide to use the pOmics3 R package for proteomics data analysis. Yes, it’s the third version of an old idea - alle guten Dinge sind 3, oder? For reasons, I decided to rethink the way I analyze data at the beginning of my PhD. It’s basically a collection of ideas, workflows and ideas for myself, which I look up every other time I do a new analysis. Main features: Framework to load, handle and analyze proteomics data tidyverse friendly Statistical analysis of qualitative and quantitative data Functional enrichment analysis via fgsea ggplot2, for publication-quality figures plotly, for interactive data exploration "],["introduction.html", "1 Introduction 1.1 Ressources 1.2 Acknowledgements", " 1 Introduction Welcome to the pOmics3 Handbook! 1.1 Ressources This is a brief listing of resources for proteomics data analysis and R programming on which all following content is based on: More to come 1.2 Acknowledgements Brief thanks to the people which were involved in the early developments of these packages (longer version): - Dr. Maxim Berezovski: Freedom to try and learn different solutions to proteomics problems. - Dr. Zoran Minic: Challenges to improve creativity and efficiency in proteomics data analysis. - Abdullah Khraibah: Motivation to share analysis code and functions. - [Daniel Torka: Recommended tidyverse and R Markdown long before I started appreciating them. Thanks Junior! "],["introduction-1.html", "Introduction", " Introduction The following chapters will ensure that all necessary software is installed so you can start working with R. First, we will install R and RStudio. Working with R heavily depends on making use of various packages freely available, which we will learn from different sources. To complete our repertoire of necessary tools for data science, we will learn to use Git and GitHub for seamless collaboration and version control. "],["r-and-rstudio.html", "2 R and RStudio 2.1 Install the R language 2.2 Install RStudio", " 2 R and RStudio “R is ‘GNU S’, a freely available language and environment for statistical computing and graphics which provides a wide variety of statistical and graphical techniques: linear and nonlinear modelling, statistical tests, time series analysis, classification, clustering, etc.” This is the description of R on the R website. 2.1 Install the R language Download the most recent release of R for your platform from https://cloud.r-project.org/. Install it like any other program. It is important to install R before RStudio. 2.2 Install RStudio RStudio is an integrated development environment (IDE) for R. Other IDEs do exist, but RStudio is the software of choice by far. Like, by far. Download the desktop version of RStudio from https://www.rstudio.com/products/rstudio/. This is the program in which you will interact with the R language and conduct all your analyses. "],["r-packages.html", "3 R packages 3.1 From CRAN 3.2 From Bioconductor 3.3 From GitHub and others sources", " 3 R packages “R packages are collections of functions and data sets developed by the community. They increase the power of R by improving existing base R functionalities, or by adding new ones.”1 Basically, R packages are nothing but collections of functions bundled together in a way that makes sense. Like different cookbooks that only contain recipes for a particular kind of food. They can be installed from many different sources which will be explored below. 3.1 From CRAN The Comprehensive R Archive Network (CRAN) package repository features 18,000+ R packages. Here’s the list of Available CRAN Packages By Name. Most general purpose packages can be found here, however due to reasons, some packages are only available from other sources. As a first example, we will download the tidyverse, a collection of R packages for data science. “The tidyverse is an opinionated collection of R packages designed for data science. All packages share an underlying design philosophy, grammar, and data structures.” We can install packages from CRAN with the install.packages() function like this: install.packages(&quot;tidyverse&quot;) Note, that we can also download more than one package at once using a vector (c()) containing all package names: install.packages(c(&quot;BiocManager&quot;, &quot;devtools&quot;)) BiocManager as well as devtools will be used in the following to download R packages from other sources. 3.2 From Bioconductor The Bioconductor is a collection of R packages for bioinformatics purposes. The first packages we will need from the Bioconductor will be downloaded with the install() function from the BiocManager package: BiocManager::install(c(&quot;fgsea&quot;, &quot;org.Hs.eg.db&quot; &quot;UniProt.ws&quot;)) 3.3 From GitHub and others sources Another important source of R packages is GitHub. GitHub is not just the place where most R packages are being developed before they are put to repositories such as CRAN or Bioconductor, many other packages including the pOmics packages can be installed from it as well. :) Let’s do it with the install_github() function from devtools: devtools::install_github(&quot;nicohuttmann/pOmics3&quot;) There are some other sources for R packages, which we want to use. Here, we are downloading the disgenet2r package to query the DisGeNET database for gene disease associations: devtools::install_bitbucket(&quot;ibi_group/disgenet2r&quot;) https://www.datacamp.com/community/tutorials/r-packages-guide↩︎ "],["version-control-with-git-and-github.html", "4 Version control with Git and GitHub 4.1 Headstart into Git and GitHub with RStudio 4.2 Basic GitHub routine 4.3 Common problems", " 4 Version control with Git and GitHub Excuse me, do you have a moment to talk about version control?2 There is a lot to say about GitHub and why one may use it. An extensive discussion on this topic and basically everything you will learn in this chapter can be found in Happy Git and GitHub for the useR. This chapter will introduce the basics on how to collaborate with other people using GitHub, which is probably the reason why you are reading this in the first place. 4.1 Headstart into Git and GitHub with RStudio The following post provides a quick introduction on how to set up Git and GitHub and connect your GitHub account with RStudio: https://www.bioinformatics.babraham.ac.uk/training/RStudio_GitHub/Initial_setup.html. Once this is done, you should be able to connect and download online GitHub repositories and are able to start collaborating on projects immediately. 4.2 Basic GitHub routine Add files: git add . … 4.3 Common problems The following should provide a summary of common problems encountered when using Git. It also serves as a reminder for myself. 4.3.1 Too large files Original post of the answer: https://stackoverflow.com/a/17890278. Download the BFG Repo-Cleaner jar file “bfg-x.xx.x.jar” (e.g. “bfg-1.14.0.jar”) from https://rtyley.github.io/bfg-repo-cleaner/. Place the file in the directory of your R project, the same of the .git folder. Open the terminal in this folder (e.g. via RStudio &gt; Git &gt; Shell…) Type in the terminal: java -jar bfg.jar --strip-blobs-bigger-than 100M The file name “bfg.jar” must match the name of your jar file and the file size limit can be changed (e.g. 50M for 50 ) If you do not encouter an error, type: git gc --prune=now --aggressive to clean the dead data. If you encounter the following error Warning : no large blobs matching criteria found in packfiles - does the repo need to be packed?, refer to this post https://stackoverflow.com/q/61769785 and type git gc prior to step 4. 4.3.2 .gitignore does not instantly work Just do: git rm -r --cached . git add . git commit -m &quot;Drop files from .gitignore&quot; https://peerj.com/preprints/3159v2/↩︎ "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
